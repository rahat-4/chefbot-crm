version: "3.9"

services:
  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: chefbotdb
      POSTGRES_USER: chefbotuser
      POSTGRES_PASSWORD: chefbotpass
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chefbotuser"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python core/manage.py collectstatic --noinput &&
             gunicorn core.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    env_file:
      - .env.prod
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - static_volume:/app/staticfiles
    expose:
      - 8000

  nginx:
    image: nginx:stable
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles:ro
      - ./certs:/etc/ssl:ro
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
